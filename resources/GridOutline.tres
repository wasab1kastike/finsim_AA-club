[gd_resource type="ShaderMaterial" load_steps=2 format=3]

[sub_resource type="Shader" id="1"]
code = """
shader_type canvas_item;
render_mode unshaded;

uniform float line_thickness : hint_range(0.0, 10.0) = 2.0;
uniform float line_alpha : hint_range(0.0, 1.0) = 0.5;

const vec2 TILE_SIZE = vec2(96.0, 84.0);

void fragment() {
    vec2 p = FRAGCOORD.xy / TILE_SIZE;
    p.y /= 0.866025404; // Adjust for hex vertical spacing
    p.x += p.y * 0.5;
    vec3 a = abs(vec3(fract(p) - 0.5, 0.0));
    a.z = a.x + a.y;
    float edge = min(min(a.x, a.y), min(a.z, 1.0 - a.z));
    float line = smoothstep(0.0, line_thickness / max(TILE_SIZE.x, TILE_SIZE.y), edge);
    vec4 base = texture(TEXTURE, UV);
    vec4 outline = vec4(0.0, 0.0, 0.0, line_alpha);
    COLOR = mix(outline, base, line);
}
"""

[resource]
shader = SubResource("1")
shader_parameter/line_thickness = 2.0
shader_parameter/line_alpha = 0.5
